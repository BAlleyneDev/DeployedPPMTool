{"version":3,"sources":["undraw_mobile_wireframe_euf4.svg","undraw_online_articles_79ff.svg","undraw_celebration_0jvk.svg","undraw_welcome_cats_thqn.svg","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","Dnd/Draggable/index.js","Dnd/Droppable/index.js","Dnd/DndTest/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","state","show","this","setState","end_date","start_date","Modal","Header","className","Body","Footer","Button","onClick","handleModal","bind","projectIdentifier","projectName","description","to","Component","connect","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","src","projectHeader","width","height","alt","map","key","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","errors","onChange","onSubmit","nextProps","e","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","match","params","getProject","updateProject","disabled","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","foundIndex","findIndex","x","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","ProjectTask","backlog_id","pt_id","deleteProjectTask","direction","statusTemp","status","UpdateProjectTask","summary","acceptanceCriteria","priority","dueDate","created_At","console","log","updateProjectTaskOnBoard","priorityString","priorityClass","onUpdateClick","patch","Backlog","tasks","project_tasks_prop","randProp","todoItems","inProgressItems","doneItems","i","length","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","addProjectTask","getProjectTask","updateProjectTask","Landing","addTaskPic","Register","username","password","confirmPassword","newUser","createNewUser","signupPicture","Login","LoginRequest","login","loginPicture","setItem","decoded","jwt_decode","component","otherProps","render","Draggable","drag","dataTransfer","setData","noAllowDrop","stopPropagation","draggable","onDragStart","onDragOver","style","children","React","Droppable","drop","getData","card","document","getElementById","display","appendChild","parentElement","setAttribute","allowedDrop","prevProps","onDrop","droppableStyle","backgroundColor","margin","DndTest","padding","color","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79aef456.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_mobile_wireframe_euf4.4b2ce634.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_online_articles_79ff.a660f562.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_celebration_0jvk.5558a031.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_welcome_cats_thqn.acf1332f.svg\";","//Types for project\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\nexport const UPDATE_PROJECT_TASK = \"UPDATE_PROJECT_TASK\";\r\n\r\n//Types for Users\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  await axios.delete(`/api/project/${id}`);\r\n  dispatch({\r\n    type: DELETE_PROJECT,\r\n    payload: id\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nclass ProjectItem extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState({ show: !this.state.show });\r\n  }\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    if (project.end_date == null) {\r\n      project.end_date = \"TBD\";\r\n    }\r\n\r\n    if (project.start_date == null) {\r\n      project.start_date = \"TBD\";\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Modal show={this.state.show}>\r\n          <Modal.Header className=\"bg-danger\">Delete Confirmation</Modal.Header>\r\n          <Modal.Body>\r\n            Are you sure? This will delete the project and all it's contents.\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              className=\"btn-outline-primary\"\r\n              onClick={this.handleModal.bind(this)}\r\n            >\r\n              No, Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"btn-outline-danger\"\r\n              onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}\r\n            >\r\n              Yes, Delete\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"card  bg-light mb-3\">\r\n          <div className=\"card-header bg-dark text-white\">\r\n            <h3>{project.projectName}</h3>\r\n          </div>\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">ID: {project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <li className=\"list-group-item board\">\r\n                <i className=\"pr-1\">{project.description} </i>\r\n              </li>\r\n\r\n              <li className=\"list-group-item update\">\r\n                <i className=\"pr-1\">\r\n                  {project.start_date} to {project.end_date}{\" \"}\r\n                </i>\r\n              </li>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link\r\n                  to={`/projectBoard/${project.projectIdentifier}`}\r\n                  className=\"pb-2\"\r\n                >\r\n                  <li className=\"list-group-item board btn-outline-primary\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\">\r\n                      {\" \"}\r\n                      View/Add Project Tasks{\" \"}\r\n                    </i>\r\n                  </li>\r\n                </Link>\r\n                <Link\r\n                  to={`/updateProject/${project.projectIdentifier}`}\r\n                  className=\"pb-2\"\r\n                >\r\n                  <li className=\"list-group-item update btn-outline-success\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  /* onClick={this.handleModal.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}*/\r\n                  onClick={this.handleModal.bind(this)}\r\n                  className=\"list-group-item delete btn-outline-danger\"\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1 \"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    deleteProject\r\n  }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport projectHeader from \"../undraw_mobile_wireframe_euf4.svg\";\r\n\r\nclass Dashboard extends Component {\r\n  //how component wil load\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    //const projects = this.props.project.projects;\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container card\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-3 text-center\">Projects</h1>\r\n              <img\r\n                src={projectHeader}\r\n                width=\"10%\"\r\n                height=\"10%\"\r\n                alt=\"background\"\r\n              />\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\n//index.js project\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">\r\n                  Create / Edit Project form\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//makes sure its of the right type\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //make it a control component\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  //when we load this component, load this\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                    name=\"projectIdentifier\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg \"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg \"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, DELETE_PROJECT } from \"../actions/types\";\r\nimport { GET_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  UPDATE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    case UPDATE_PROJECT_TASK:\r\n      let foundIndex = state.project_tasks.findIndex(\r\n        x => x.projectSequence === action.payload.projectSequence\r\n      );\r\n      state.project_tasks[foundIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  deleteProjectTask,\r\n  updateProjectTaskOnBoard\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nclass ProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState({ show: !this.state.show });\r\n  }\r\n\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  onUpdateClick(backlog_id, pt_id, direction) {\r\n    let statusTemp = this.props.project_task.status;\r\n    switch (direction) {\r\n      case \"left\":\r\n        if (statusTemp === \"IN_PROGRESS\") {\r\n          statusTemp = \"TO_DO\";\r\n        } else if (statusTemp === \"DONE\") {\r\n          statusTemp = \"IN_PROGRESS\";\r\n        }\r\n        break;\r\n\r\n      case \"right\":\r\n        if (statusTemp === \"TO_DO\") {\r\n          statusTemp = \"IN_PROGRESS\";\r\n        } else if (statusTemp === \"IN_PROGRESS\") {\r\n          statusTemp = \"DONE\";\r\n        }\r\n        break;\r\n\r\n      default:\r\n        statusTemp = this.props.project_task.status;\r\n    }\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.props.project_task.id,\r\n      projectSequence: this.props.project_task.projectSequence,\r\n      summary: this.props.project_task.summary,\r\n      acceptanceCriteria: this.props.project_task.acceptanceCriteria,\r\n      status: statusTemp,\r\n      priority: this.props.project_task.priority,\r\n      dueDate: this.props.project_task.dueDate,\r\n      projectIdentifier: this.props.project_task.projectIdentifier,\r\n      created_At: this.props.project_task.created_At\r\n    };\r\n\r\n    console.log(UpdateProjectTask);\r\n    this.props.updateProjectTaskOnBoard(\r\n      this.props.project_task.projectIdentifier,\r\n      this.props.project_task.projectSequence,\r\n      UpdateProjectTask\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <Modal show={this.state.show}>\r\n          <Modal.Header className=\"bg-danger\">Delete Confirmation</Modal.Header>\r\n          <Modal.Body>\r\n            Are you sure? This will delete this task and all it's contents.\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              className=\"btn-outline-primary\"\r\n              onClick={this.handleModal.bind(this)}\r\n            >\r\n              No, Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"btn-outline-danger\"\r\n              onClick={this.onDeleteClick.bind(\r\n                this,\r\n                project_task.projectIdentifier,\r\n                project_task.projectSequence\r\n              )}\r\n            >\r\n              Yes, Delete\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          <button\r\n            className={classnames(\"btn\", {\r\n              \"d-none\": project_task.status === \"TO_DO\"\r\n            })}\r\n            onClick={this.onUpdateClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence,\r\n              \"left\"\r\n            )}\r\n          >\r\n            <i className=\"fas fa-arrow-left\"> </i>\r\n          </button>\r\n          {project_task.projectSequence} Priority: {priorityString}\r\n          <button\r\n            className={classnames(\"btn\", {\r\n              \"d-none\": project_task.status === \"DONE\"\r\n            })}\r\n            onClick={this.onUpdateClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence,\r\n              \"right\"\r\n            )}\r\n          >\r\n            <i className=\"fas fa-arrow-right\"> </i>\r\n          </button>\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.handleModal.bind(this)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask, updateProjectTaskOnBoard }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  UPDATE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTaskOnBoard = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    dispatch({\r\n      type: UPDATE_PROJECT_TASK,\r\n      payload: project_task\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n  dispatch({\r\n    type: DELETE_PROJECT_TASK,\r\n    payload: pt_id\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  componentDidUpdate() {\r\n    console.log(\"updated\");\r\n  }\r\n\r\n  render() {\r\n    //extracting variable passed to this component\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask\r\n        key={project_task.id}\r\n        randProp={project_task.projectSequence}\r\n        project_task={project_task}\r\n      />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {todoItems}\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {inProgressItems}\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    //access the redux store backlog from map to state\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    //possibly refactor\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container card bg-white\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-info mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  //want to extract id from constructor so pass props\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //when error occurs, new props will be received\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-info\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Add Project Task - {this.state.projectIdentifier}\r\n              </h4>\r\n              <br></br>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    //destructuring\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      created_At: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-info\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport addTaskPic from \"../../undraw_online_articles_79ff.svg\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron-style landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <div className=\"jumbotron light-overlay\">\r\n                  <h1 className=\"display-4\">\r\n                    BAlleyneDev Project Management Tool!{\" \"}\r\n                    <img\r\n                      src={addTaskPic}\r\n                      width=\"100vh\"\r\n                      height=\"100vh\"\r\n                      alt=\"people building a mobile app\"\r\n                    />\r\n                  </h1>\r\n                  <p className=\"lead\">\r\n                    This is a tool built to help effectively keep your projects\r\n                    on track!\r\n                  </p>\r\n                  <hr className=\"my-4\" />\r\n                  <p>\r\n                    Create your account to start managing your projects the\r\n                    Agile way.\r\n                  </p>\r\n                  <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                    Sign Up\r\n                  </Link>\r\n                  <Link to=\"/login\" className=\"btn btn-lg btn-success mr-2\">\r\n                    Login\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport signupPicture from \"../../undraw_celebration_0jvk.svg\";\r\n\r\nclass Register extends Component {\r\n  //conrolled component\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card col-md-6 m-auto card-cascade wider\">\r\n        <div className=\"view view-cascade overlay\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={signupPicture}\r\n            alt=\"People looking happy\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body card-body-cascade text-center\">\r\n          <div className=\"register\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center font-weight-bold pink-lighter-hover mb-3\">\r\n                    Sign Up\r\n                  </h1>\r\n                  <p className=\"lead text-center\">Create your Account</p>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.fullName\r\n                        })}\r\n                        placeholder=\"Full Name\"\r\n                        name=\"fullName\"\r\n                        value={this.state.fullName}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.fullName && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.fullName}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.username\r\n                        })}\r\n                        placeholder=\"Email Address (Username)\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.username && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.username}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.password\r\n                        })}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.confirmPassword\r\n                        })}\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmPassword\"\r\n                        value={this.state.confirmPassword}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.confirmPassword && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.confirmPassword}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary bg-primary btn-block mt-4\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport loginPicture from \"../../undraw_welcome_cats_thqn.svg\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"test@test.com\",\r\n      password: \"password\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card col-md-6 m-auto card-cascade wider\">\r\n        <div className=\"view view-cascade overlay\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={loginPicture}\r\n            alt=\"cats saying welcome\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card-body card-body-cascade text-center\">\r\n          <div className=\"login\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center font-weight-bold pink-lighter-hover mb-3\">\r\n                    Log In\r\n                  </h1>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.username\r\n                        })}\r\n                        placeholder=\"Email Address\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.username && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.username}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.password\r\n                        })}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary bg-primary btn-block mt-4 \"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Draggable extends React.Component {\r\n  drag = e => {\r\n    e.dataTransfer.setData(\"transfer\", e.target.id);\r\n  };\r\n\r\n  noAllowDrop = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        draggable=\"true\"\r\n        onDragStart={this.drag}\r\n        onDragOver={this.noAllowDrop}\r\n        style={this.props.style}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDraggable.propTypes = {\r\n  id: PropTypes.string,\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Droppable extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    console.log(\"updated droppable\");\r\n  }\r\n\r\n  drop = e => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer.getData(\"transfer\");\r\n    const card = document.getElementById(data);\r\n    card.style.display = 'block';\r\n    e.target.appendChild(card);\r\n    console.log(document.getElementById(data).parentElement);\r\n    document.getElementById(data).setAttribute(\"container\", this.props.id);\r\n  };\r\n\r\n  allowedDrop = e => {\r\n    e.preventDefault();\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        onDrop={this.drop}\r\n        onDragOver={this.allowedDrop}\r\n        style={this.props.style}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDroppable.propTypes = {\r\n  id: PropTypes.string,\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport Draggable from \"../Draggable\";\r\nimport Droppable from \"../Droppable\";\r\n\r\nconst droppableStyle = {\r\n  backgroundColor: \"#555\",\r\n  width: \"200px\",\r\n  height: \"400px\",\r\n  margin: \"32px\"\r\n};\r\n\r\nexport default class DndTest extends React.Component {\r\n  onChange(e) {\r\n    var length = document.getElementById(\"dr1\").children.length;\r\n    console.log(length);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          padding: \"32px\",\r\n          display: \"flex\",\r\n          \"justify-content\": \"center\"\r\n        }}\r\n      >\r\n        <Droppable\r\n          id=\"dr1\"\r\n          value=\"dr1\"\r\n          style={droppableStyle}\r\n          onChange={this.onChange}\r\n        >\r\n          <Draggable id=\"item1\" style={{ margin: \"8px\" }}>\r\n            <div\r\n              style={{\r\n                padding: \"8px\",\r\n                color: \"#555\",\r\n                \"background-color\": \"white\",\r\n                \"border-radius\": \"3px\"\r\n              }}\r\n            >\r\n              Some text 1\r\n            </div>\r\n          </Draggable>\r\n          <Draggable\r\n            id=\"item2\"\r\n            style={{ margin: \"8px\" }}\r\n            onChange={this.onChange}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: \"8px\",\r\n                color: \"#555\",\r\n                \"background-color\": \"white\",\r\n                \"border-radius\": \"3px\"\r\n              }}\r\n            >\r\n              Some text 2\r\n            </div>\r\n          </Draggable>\r\n        </Droppable>\r\n\r\n        <Droppable id=\"dr2\" value=\"dr2\" style={droppableStyle}></Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport DndTest from \"./Dnd/DndTest\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  //call it on the redux store\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/dragDrop\" component={DndTest} />\n\n          {\n            //Private Routes\n          }\n          <Switch></Switch>\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n          <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n          <SecuredRoute\n            exact\n            path=\"/updateProject/:id\"\n            component={UpdateProject}\n          />\n          <SecuredRoute\n            exact\n            path=\"/projectBoard/:id\"\n            component={ProjectBoard}\n          />\n          <SecuredRoute\n            exact\n            path=\"/addProjectTask/:id\"\n            component={AddProjectTask}\n          />\n          <SecuredRoute\n            exact\n            path=\"/updateProjectTask/:backlog_id/:pt_id\"\n            component={UpdateProjectTask}\n          />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}